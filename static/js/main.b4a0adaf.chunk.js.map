{"version":3,"sources":["Components/EditarBebida.js","Components/Bebida.js","Components/App.js","serviceWorker.js","index.js"],"names":["EditarBebida","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","state","taskName","description","startDate","endDate","alert","newDrink","nombre","descripcion","precio","cantidad","setState","handleClose","handleEdit","edit","id","adding","handleInputChange","bind","assertThisInitialized","event","target","value","type","checked","name","defineProperty","react_default","a","createElement","className","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","placeholder","onChange","Button","variant","onClick","React","Component","Bebidas","_this2","Card","bg","text","style","width","Body","Title","Text","Footer","delete","REST_PATH","App","handleShow","bebidas","isLoading","mensaje","error","show","editing","loadData","axios","get","then","response","data","respuesta","console","log","catch","message","_this3","post","_this4","_this5","put","form","_this6","_this$state","Components_EditarBebida","Container","Alert","margin","length","map","bebida","key","_id","Bebida","Spinner","animation","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4a0adaf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\r\n\r\nclass EditarBebida extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      adding: props.adding,\r\n      edit: props.edit,\r\n      nombre: props.nombre,\r\n      descripcion: props.descripcion,\r\n      precio: props.precio,\r\n      cantidad: props.cantidad,\r\n      id: props.id\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  handleSubmit = () => {\r\n    if (\r\n      this.state.taskName === \"\" ||\r\n      this.state.description === \"\" ||\r\n      this.state.startDate === \"\" ||\r\n      this.state.endDate === \"\"\r\n    ) {\r\n      alert(\"There is an empty value\");\r\n    } else {\r\n      this.props.newDrink(\r\n        this.state.nombre,\r\n        this.state.descripcion,\r\n        this.state.precio,\r\n        this.state.cantidad\r\n      );\r\n      this.setState({\r\n        nombre: \"\",\r\n        descripcion: \"\",\r\n        precio: \"\",\r\n        cantidad: \"\"\r\n      });\r\n    }\r\n    this.props.handleClose();\r\n  };\r\n\r\n  handleEdit = () => {\r\n    if (\r\n      this.state.taskName === \"\" ||\r\n      this.state.description === \"\" ||\r\n      this.state.startDate === \"\" ||\r\n      this.state.endDate === \"\"\r\n    ) {\r\n      alert(\"There is an empty value\");\r\n    } else {\r\n      this.props.edit(\r\n        this.state.id,\r\n        this.state.nombre,\r\n        this.state.descripcion,\r\n        this.state.precio,\r\n        this.state.cantidad\r\n      );\r\n      this.setState({\r\n        nombre: \"\",\r\n        descripcion: \"\",\r\n        precio: \"\",\r\n        cantidad: \"\"\r\n      });\r\n    }\r\n    this.props.handleClose();\r\n  };\r\n\r\n  //   addForm() {\r\n  //     let form = (\r\n\r\n  //     );\r\n  //     return form;\r\n  //   }\r\n\r\n  render() {\r\n    let adding = this.state.adding;\r\n    return (\r\n      <div>\r\n        <div className=\"newTask\">\r\n          <h2>Nueva Bebida {this.state.id}</h2>\r\n          <Form.Group as={Row} controlId=\"formDrinkName\">\r\n            <Form.Label column sm=\"4\">\r\n              Nombre:\r\n            </Form.Label>\r\n            <Col sm=\"12\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"nombre\"\r\n                placeholder=\"Nombre de la bebida\"\r\n                value={this.state.nombre}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} controlId=\"formDrinkDescrption\">\r\n            <Form.Label column sm=\"4\">\r\n              Description:\r\n            </Form.Label>\r\n            <Col sm=\"12\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"descripcion\"\r\n                placeholder=\"Descripcion de la bebida\"\r\n                value={this.state.descripcion}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formDrinkPrice\">\r\n              <Form.Label>Precio</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                name=\"precio\"\r\n                value={this.state.precio}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formDrinkQuantity\">\r\n              <Form.Label>Cantidad</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                name=\"cantidad\"\r\n                value={this.state.cantidad}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          {adding ? (\r\n            <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n              Agregar\r\n            </Button>\r\n          ) : (\r\n            <Button variant=\"success\" onClick={this.handleEdit}>\r\n              Editar\r\n            </Button>\r\n          )}\r\n\r\n          <Button variant=\"danger\" onClick={this.props.handleClose}>\r\n            Cancelar\r\n          </Button>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formDrinkPrice\"></Form.Group>\r\n          </Form.Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditarBebida;\r\n","import React from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\n\r\nclass Bebidas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.id,\r\n      nombre: props.nombre,\r\n      descripcion: props.descripcion,\r\n      cantidad: props.cantidad,\r\n      precio: props.precio\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card bg=\"dark\" text=\"white\" style={{ width: \"20rem\" }}>\r\n        <Card.Body>\r\n          <Card.Title>{this.state.nombre}</Card.Title>\r\n          <Card.Text>{this.state.descripcion}</Card.Text>\r\n          <Card.Text>\r\n            <small className=\"text-muted\">₡{this.state.precio}</small>\r\n            <br></br>\r\n            <small className=\"text-muted\">{this.state.id}</small>\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() =>\r\n              this.props.handleEdit(\r\n                this.state.id,\r\n                this.state.nombre,\r\n                this.state.descripcion,\r\n                this.state.precio,\r\n                this.state.cantidad\r\n              )\r\n            }\r\n          >\r\n            Editar\r\n          </Button>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={() => this.props.delete(this.props.id)}\r\n          >\r\n            Eliminar\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bebidas;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport EditarBebida from \"./EditarBebida\";\r\nimport Bebida from \"./Bebida\";\r\nimport { Container, Button, Row, Col, Alert, Spinner } from \"react-bootstrap\";\r\nimport \"../App.css\";\r\nconst REST_PATH = \"https://armavill.github.io/api-bebidas/\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.edit = this.edit.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.newDrink = this.newDrink.bind(this);\r\n\r\n    this.state = {\r\n      bebidas: [],\r\n      isLoading: true,\r\n      mensaje: \"\",\r\n      error: null,\r\n      show: false,\r\n      editing: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    axios\r\n      .get(REST_PATH + \"/bebidas\")\r\n      .then(response => {\r\n        this.setState({\r\n          bebidas: response.data.respuesta,\r\n          isLoading: false\r\n        });\r\n        console.log(this.state);\r\n      })\r\n      .catch(error =>\r\n        this.setState({ error: true, mensaje: error.message, isLoading: false })\r\n      );\r\n  }\r\n\r\n  newDrink(nombre, descripcion, precio, cantidad) {\r\n    console.log(nombre, descripcion, precio, cantidad);\r\n    axios\r\n      .post(REST_PATH + \"/bebidas\", {\r\n        nombre,\r\n        descripcion,\r\n        precio,\r\n        cantidad\r\n      })\r\n      .then(response => {\r\n        this.setState({\r\n          error: response.data.error,\r\n          mensaje: response.data.mensaje\r\n        });\r\n        this.loadData();\r\n        console.log(response.data.error);\r\n        console.log(response.data.mensaje);\r\n      })\r\n      .catch(error =>\r\n        this.setState({ error: true, mensaje: error.message, isLoading: false })\r\n      );\r\n  }\r\n\r\n  delete(id) {\r\n    console.log(\"Eliminando..\" + id);\r\n    axios\r\n      .delete(REST_PATH + \"/bebidas/\" + id)\r\n      .then(response => {\r\n        console.log(response.data.mensaje);\r\n        this.setState({\r\n          error: response.data.error,\r\n          mensaje: response.data.mensaje\r\n        });\r\n        this.loadData();\r\n      })\r\n      .catch(error =>\r\n        this.setState({ error: true, mensaje: error.message, isLoading: false })\r\n      );\r\n  }\r\n\r\n  edit(id, nombre, descripcion, precio, cantidad) {\r\n    console.log(id, nombre, descripcion, precio, cantidad);\r\n    axios\r\n      .put(REST_PATH + \"/bebidas/\" + id, {\r\n        id: id,\r\n        nombre,\r\n        descripcion,\r\n        precio,\r\n        cantidad\r\n      })\r\n      .then(response => {\r\n        this.setState({\r\n          error: response.data.error,\r\n          mensaje: response.data.mensaje,\r\n          bebidas: []\r\n        });\r\n        this.loadData();\r\n        console.log(response.data.respuesta);\r\n        console.log(response.data.error);\r\n        console.log(response.data.mensaje);\r\n      })\r\n      .catch(error =>\r\n        this.setState({ error: true, mensaje: error.message, isLoading: false })\r\n      );\r\n  }\r\n\r\n  handleEdit(id, nombre, descripcion, precio, cantidad) {\r\n    console.log(id);\r\n    this.setState({\r\n      editing: true,\r\n      id: id,\r\n      nombre: nombre,\r\n      descripcion: descripcion,\r\n      precio: precio,\r\n      cantidad: cantidad\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ show: false, editing: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  render() {\r\n    let form;\r\n    const { bebidas, editing, show, isLoading } = this.state;\r\n\r\n    if (show) {\r\n      form = (\r\n        <div>\r\n          <EditarBebida\r\n            handleClose={this.handleClose}\r\n            newDrink={this.newDrink}\r\n            adding={true}\r\n            id={\"nuevoid\"}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      form = (\r\n        <Button variant=\"primary\" onClick={this.handleShow}>\r\n          Nueva Bebida\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    if (editing) {\r\n      form = (\r\n        <div>\r\n          <EditarBebida\r\n            handleClose={this.handleClose}\r\n            edit={this.edit}\r\n            editing={true}\r\n            id={this.state.id}\r\n            nombre={this.state.nombre}\r\n            descripcion={this.state.descripcion}\r\n            cantidad={this.state.cantidad}\r\n            precio={this.state.precio}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container className=\"App\">\r\n        <div>\r\n          <h1>Lista de Bebidas Disponibles</h1>\r\n          <div>{form}</div>\r\n\r\n          {this.state.mensaje !== \"\" && (\r\n            <div>\r\n              {this.state.error ? (\r\n                <Alert variant=\"danger\" style={{ margin: \" 20px 0 20px 0\" }}>\r\n                  {this.state.mensaje}\r\n                </Alert>\r\n              ) : (\r\n                <Alert variant=\"primary\" style={{ margin: \" 20px 0 20px 0\" }}>\r\n                  {this.state.mensaje}\r\n                </Alert>\r\n              )}\r\n            </div>\r\n          )}\r\n          <Row className=\"fila\">\r\n            {bebidas.length > 0 ? (\r\n              bebidas.map(bebida => (\r\n                <Col key={bebida._id} sm={4}>\r\n                  <Bebida\r\n                    id={bebida._id}\r\n                    nombre={bebida.nombre}\r\n                    descripcion={bebida.descripcion}\r\n                    precio={bebida.precio}\r\n                    cantidad={bebida.cantidad}\r\n                    delete={this.delete}\r\n                    handleEdit={this.handleEdit}\r\n                  ></Bebida>\r\n                </Col>\r\n              ))\r\n            ) : !isLoading ? (\r\n              <Spinner animation=\"border\" variant=\"primary\" />\r\n            ) : (\r\n              <p>No hay bebidas</p>\r\n            )}\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}